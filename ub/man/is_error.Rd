% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/errorchecks.R
\name{is_error}
\alias{is_error}
\title{Checks for an error}
\usage{
is_error(
  x,
  ok_value,
  ok_set,
  compare_via = identical,
  error_classes = c("try-error", "simpleError", "error"),
  warning_is_error = TRUE,
  warning_classes = c("simpleWarning", "warning")
)
}
\value{
Logical indicating whether \code{x} was classified as an error.
}
\description{
Checks whether an object is a result of a failed (i.e. error throwing)
call by checking whether it is of class \code{try-error} (which is
produced by \code{\link[base:try]{base::try()}}). The argument \code{ok_value} allows the user
to require that \code{x} has certain value (the value in \code{ok_value}) in
order for \code{x} to not be classified as an error. \code{ok_set} allows to
give multiple such values. In other words, the content of \code{ok_value}
is compared directly to \code{x}, while \code{ok_set} is gone through and
compared with \code{x} as a set (via \code{base::sapply}).
}
\examples{
is_error(try(x = .this.is.a.missing.variable))
is_error(FALSE, ok_value=TRUE)

# using the specific value requirement: single value
is_error(1, 1)                 # no error
is_error(1, 2)                 # an error

# using the specific value requirement: set
is_error(1, ok_set=1:2)        # beware: still an error, since the argument is taken
                               # as type 'numeric' whereas 1:2 is type 'integer'
# define the ok set differently
is_error(1, ok_set=c(1,2))
# or use a different comparison function
is_error(1, ok_set=1:2, comp=equals)

# careful though (equals compares elements)
is_error(1, ok_set=list(1), comp=equals)
is_error(1, ok_set=list(diag(2)), comp=equals) 

# stick with identical for multidimensional objects
is_error(diag(2), diag(2))
is_error(diag(2), ok_set=list(diag(2)))
sapply(list(1, diag(2), diag(3)), is_error, ok_set=list(diag(2), diag(3)))

# careful again
\dontrun{
is_error(diag(2), ok_set=diag(2))
}

}
\seealso{
Other coding-related functions provided by ub: 
\code{\link{call_to_list}},
\code{\link{compare_functions}()},
\code{\link{fun_name}},
\code{\link{function_code_to_text}()},
\code{\link{function_dump_code}()},
\code{\link{function_find_dependencies}()},
\code{\link{function_modify}},
\code{\link{function_separate_code}()},
\code{\link{hide}()},
\code{\link{hijack}()},
\code{\link{namespaces}},
\code{\link{nformals}()},
\code{\link{null}()}
}
\concept{coding-related functions provided by ub}
