% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strings.R
\name{padding}
\alias{padding}
\alias{str_pad0}
\alias{str_pad1}
\alias{str_lengthen}
\alias{int_pad}
\alias{num_pad}
\alias{spaces}
\title{Format string}
\usage{
str_pad0(
  x,
  min_width = max(nchar(x)) + 1,
  padding = "0",
  nextra = 0,
  side = c("left", "right")
)

str_pad1(
  x,
  min_width = nchar(x),
  padding = " ",
  nextra = 1,
  side = c("left", "right")
)

str_lengthen(
  x,
  min_width = nchar(x),
  padding = " ",
  nextra = 1,
  side = c("left", "right")
)

int_pad(x, min_width, format, fmt = "d")

num_pad(x, min_nint, min_ndig = 6, fmt = "f", format)

spaces(n, char = " ")
}
\description{
\code{str_pad1} pads the input to a given width (\code{width}).  It formats
the contents of \code{x} to a minimum width (i.e. character count) or other
specified format (via \code{format}). The minimum length is controlled via
\code{min_width} and \code{nextra}. Non-character values are converted to
character using \code{as.character()}.

\code{str_pad0()} pads with '0' (by default at least one '0' is padded)

\code{str_lengthen()} is an alias for \code{str_pad1()}.

\code{int_pad} pads an integer with leading zeros.

\code{num_pad} pads a real/double with leading zeros.

\code{spaces} produces an empty string of length \code{n}.

Check the function in \code{options()$str$formatNum} to see how R
formats numbers.
}
\examples{
str_pad0('21')
str_pad0(c('21','1'))
str_pad0(c('21','1'), 3)

str_pad1('hello', 20)
str_pad1('hello', 20, '.')
str_pad1('hello', 20, side='right')

str_pad1('hello', 20)
str_pad1('hello', 20, '.')
str_pad1('hello', 20, side='right')
str_pad1(c('hello','prague'), 8, '.')
str_pad1(c('hello','prague'), 4, '.')
str_pad1(c('hello','prague'), 4, '.', 1)

}
\seealso{
Other string-manipulation functions provided by ub: 
\code{\link{ascii}()},
\code{\link{collapse}},
\code{\link{cumpaste0}()},
\code{\link{multi_sub}()},
\code{\link{patternize}()},
\code{\link{str_cut}()},
\code{\link{str_diff}()},
\code{\link{str_grab}()},
\code{\link{str_insert}()},
\code{\link{str_is_empty}()},
\code{\link{str_paste_grid}()},
\code{\link{str_pos}()},
\code{\link{str_rev.character}()},
\code{\link{str_trim_space}()},
\code{\link{sub_at}()},
\code{\link{toupperfirst}()}
}
\concept{string-manipulation functions provided by ub}
