% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{append_body}
\alias{append_body}
\title{Append the body of a function}
\usage{
append_body(
  fun,
  calls,
  where = c("first", "last", "at"),
  at = NULL,
  replace_at = TRUE
)
}
\description{
Takes an existing function \code{fun} and changes its body by appending
to it the calls supplied in \code{calls}. The calls can either be of class
\code{calls} or class \code{character} (converted to \code{call} via
\code{as.character}). The way the new cody is appended is governed by
\code{where}, which allows these options:

\"first\": the code in \code{calls} is placed before the existing code.

\"last\": the code in \code{calls} is placed after the existing code.

\"at\": \code{calls} must be of length 1 and be of class character and
its content is parsed and evaluated. It can reference the selected
old line (which one that is is determined by the value in \code{at}) as
\code{.oldline.} (see the example below). A call with non-missing \code{at}
and missing  \code{where} implies \code{where='at'}.

Remember to use \verb{<-} in any assignment strings (not \code{=}) supplied to
\code{append_body()}.
}
\examples{
f = function() { x = pi }
print(f())                           # returns pi (i.e. 3.141593)
f = append_body(f, quote(x^2))
print(f())                           # returns pi^2 (i.e. 9.869604)
f = append_body(f, c(quote(x <- x^2), quote(x-1)))
print(f())                           # returns pi^2 - 1 (i.e. 8.869604)

# Modify an existing function:
call = base::str2lang("cat(\"And the symmetric set difference is...\n\")")
f = append_body(setdiffsym, call, where='first')
f(1:5, 3:10)

# Above the line is placed at the top so that it does not affect
# the return value from the function. A more complex editing is
# is possible. We can append the last call in the function
# to turn it into an assignment and thus assign the calculated
# value into a variable. We can then save add the printing line 
# without affecting the returned value of the function. The line 
# in the original code that is altered is determined thru 'at'.
call = "substitute(y -> x, list(y=.oldline.))"
f = append_body(setdiffsym, call, at=1)
f = append_body(f, c("cat(\"And the symmetric set difference is...\n\")", "x"), where='last')
f(1:5, 3:10)

}
\concept{function-modification functions provided by ub}
