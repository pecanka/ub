% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stringchecks.R
\name{str_is_empty}
\alias{str_is_empty}
\alias{str_is_empty_not}
\alias{str_n_empty}
\alias{str_is_empty_any}
\title{Empty string check}
\usage{
str_is_empty(x, trim = FALSE)

str_is_empty_not(x, trim = FALSE)

str_n_empty(x, trim = FALSE)

str_is_empty_any(x, trim = FALSE)
}
\description{
\code{str_is_empty()} checks for empty strings, i.e. strings with zero
length. By default, white space is not trimmed prior to the check,
but this can be enabled by adding \code{trim=TRUE} to the call.

\code{str_is_empty_any()} checks for any empty strings inside a vector.

\code{str_is_empty_not()} is returns the negation of what \code{str_is_empty()}
returns.

\code{str_n_empty()} counts the number of empty string in a character
vector. Same defaults as \code{str_is_empty()}.
}
\examples{
str = c('hello','world','   ','')

str_is_empty(str)                   # only the first is empty
str_is_empty(str, TRUE)             # both empty

str_is_empty_not(str)               # both non-empty
str_is_empty_not(str, TRUE)         # only the second is non-empty

str_is_empty_any(str)               # TRUE (because of the 4th)
str_is_empty_any(str[1:3])          # FALSE (without trimming 1st-3rd are not empty)
str_is_empty_any(str[1:3], TRUE)    # TRUE (with trimming the 3rd is empty)

str_n_empty(str)                    # counts 1 empty
str_n_empty(str, TRUE)              # counts 2 empty

}
\seealso{
Other string-manipulation functions provided by ub: 
\code{\link{ascii}()},
\code{\link{collapse}},
\code{\link{cumpaste0}()},
\code{\link{multi_sub}()},
\code{\link{padding}},
\code{\link{patternize}()},
\code{\link{str_cut}()},
\code{\link{str_diff}()},
\code{\link{str_grab}()},
\code{\link{str_insert}()},
\code{\link{str_paste_grid}()},
\code{\link{str_pos}()},
\code{\link{str_rev.character}()},
\code{\link{str_trim_space}()},
\code{\link{sub_at}()},
\code{\link{toupperfirst}()}
}
\concept{string-manipulation functions provided by ub}
