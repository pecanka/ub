% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strings.R
\name{str_paste_grid}
\alias{str_paste_grid}
\title{Grid pasting of strings}
\usage{
str_paste_grid(..., vars, sep1 = "=", sep2 = "_")
}
\description{
\code{str_paste_grid()} produces a concatenation of all possible
combinations of elements in in the supplied vectors.  for a list of
combinations of vectors. Takes vectors with parameter values and a
vector of names and pastes them together in a cartesian product way.
Can be used to names the elements of a list which contains the
results of a run of analysis for each combination on a grid
(cartesian product) of parameter combinations.
}
\examples{
cities = c("Prague","London")
parts = c("InnerCity","Suburbs")
number = 1:5

# combine two and three
str_paste_grid(cities, parts)
str_paste_grid(cities, parts, number)

# specify the names directly
str_paste_grid(cities, parts, number, vars=c('City','Part','#'))

# leave some names out
str_paste_grid(cities, parts, number, vars=c('City','Part'))

# leave all names out
str_paste_grid(cities, parts, number, vars=NULL)

# alter the separator
str_paste_grid(cities, parts, number, vars=NULL, sep2=":")

}
\seealso{
Other string-manipulation functions provided by utilbox: 
\code{\link{ascii}()},
\code{\link{collapse}},
\code{\link{cumpaste0}()},
\code{\link{multi_sub}()},
\code{\link{padding}},
\code{\link{patternize}()},
\code{\link{str_cut}()},
\code{\link{str_diff}()},
\code{\link{str_grab}()},
\code{\link{str_insert}()},
\code{\link{str_is_empty}()},
\code{\link{str_pos}()},
\code{\link{str_rev}()},
\code{\link{str_trim_space}()},
\code{\link{sub_at}()},
\code{\link{toupperfirst}()}
}
\concept{string-manipulation functions provided by utilbox}
