% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coding.R
\name{call_to_list}
\alias{call_to_list}
\alias{dots_to_nlist}
\alias{args_to_nlist}
\title{Processing of ellipsis and call arguments}
\usage{
dots_to_nlist(
  flatten = FALSE,
  assign_names = TRUE,
  names,
  envir = parent.frame()
)

args_to_nlist(envir = parent.frame())
}
\description{
`dots_to_nlist` returns the ellipsis of a parent function in a 
nice form. In calls with unnamed arguments it extracts the names
of variables supplied in the call and uses them to assign names 
to the list produced from the dots (`...`).
}
\details{
`args_to_nlist` returns all arguments supplied or simply defined
to the call of the parent function in a nice `named list` form. 
With `only_called=TRUE` the function can be called at any point
inside the function for which it is getting the arguments. 
With `only_called=FALSE`, in order to work properly,
the call to `args_to_nlist` should be the first call inside 
the parent function, otherwise the call to `ls` might return also
objects that did not exist upon the call to the function.
}
\examples{
f = function(...) { dots_to_nlist() }
f(name='John', kids=c('Peter','Jake'))
name = 'John'; age = 35
f(name, age)

g = function(name, other, only_called=TRUE) { args_to_nlist(only_called) }
g('John', c('Peter','Jake'))

}
\seealso{
Other coding-related functions provided by utilbox: 
\code{\link{append_body}()},
\code{\link{compare_functions}()},
\code{\link{fun_code_to_text}()},
\code{\link{hijack}()},
\code{\link{this_fun_name}()}
}
\concept{coding-related functions provided by utilbox}
