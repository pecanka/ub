% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ellipsis.R
\name{call_to_list}
\alias{call_to_list}
\alias{dots_to_nlist}
\alias{args_to_nlist}
\alias{argvals_to_nlist}
\title{Processing of ellipsis and call arguments}
\usage{
dots_to_nlist(
  keep_symbolic = FALSE,
  flatten = FALSE,
  assign_names = TRUE,
  names,
  envir = parent.frame()
)

args_to_nlist(envir = parent.frame())

argvals_to_nlist(envir = parent.frame())
}
\description{
\code{dots_to_nlist()} returns the contents of the ellipsis of a parent function in a
nice form. In calls with unnamed arguments it extracts the names of
variables supplied in the call and uses them to assign names to the
list produced from the ellipsis (\code{...}). With \code{keep_symbolic=TRUE},
\code{dots_to_nlist()} returns only the names of the supplied arguments
in the symbolic form. A call to \code{as.character()} on the output then
gives the names in character form. Using \code{keep_symbolic=TRUE} is handy
for instance for processing symbolic calls (e.g. column names to sort by
in \code{sort_df()} or packages to load in \code{llib()}).

\code{args_to_nlist()} returns all arguments supplied to or simply defined in
the call of the parent function in the form of a \verb{named list}. In order
for it to work properly, the call to \code{args_to_nlist()} must be the first
call inside the parent function, otherwise the call to \code{ls} might return
also objects that did not exist upon the call to the function.

\code{argvals_to_nlist()} extracts the values supplied as arguments during
the call to the parent function.
}
\examples{
f = function(...) { dots_to_nlist() }
f(name='John', kids=c('Peter','Jake'))
name = 'John'; age = 35
f(name, age)

g = function(name, other, only_called=TRUE) { args_to_nlist(only_called) }
g('John', c('Peter','Jake'))

}
\seealso{
Other coding-related functions provided by utilbox: 
\code{\link{append_body}()},
\code{\link{compare_functions}()},
\code{\link{fun_name}},
\code{\link{function_code_to_text}()},
\code{\link{function_dump_code}()},
\code{\link{hide}()},
\code{\link{hijack}()},
\code{\link{is_error}()},
\code{\link{namespaces}}
}
\concept{coding-related functions provided by utilbox}
