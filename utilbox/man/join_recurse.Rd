% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/joins.R
\name{join_recurse}
\alias{join_recurse}
\alias{full_join_recurse}
\alias{left_join_recurse}
\alias{right_join_recurse}
\alias{inner_join_recurse}
\alias{semi_join_recurse}
\title{Recursive joins}
\usage{
join_recurse(list, ..., join)

full_join_recurse(list, ..., join = "full_join")

left_join_recurse(list, ..., join = "left_join")

right_join_recurse(list, ..., join = "right_join")

inner_join_recurse(list, ..., join = "inner_join")

semi_join_recurse(list, ..., join = "semi_join")
}
\arguments{
\item{list}{A list of tibbles to be recursively joined.}

\item{...}{Arguments passed on to the join function.}

\item{join}{The name of the join function to call (e.g. \code{full_join}
from package \code{dplyr})}
}
\value{
The result of joining the elements of \code{list} recursively.
}
\description{
`join_recurse` Performs a join of multiple tibbles supplied in a list. 
In order to function properly it requires a join function to be supplied.
and exist. This can be for instance those found in the package 
\code{dplyr} (\code{left_join}, \code{full_join}, etc.).
}
\section{Recursive joins}{


`full_join_recurse` is alias for `join_recurse` with `join` set
to `full_join`. 

`left_join_recurse` is alias for `join_recurse` with `join` set
to `left_join`. 

`right_join_recurse` is alias for `join_recurse` with `join` set
to `right_join`. 

`inner_join_recurse` is alias for `join_recurse` with `join` set
to `inner_join`. 

`semi_join_recurse` is alias for `join_recurse` with `join` set
to `semi_join`. 

Naturally, all of these will fail if the function supplied in `join` 
does exists in the search path.
}

\examples{
a = tibble(day=c('Mon','Tue','Wed'), a=1:3)
b = tibble(day=c('Tue','Wed'), b=3:4)
c = tibble(day=c('Mon','Wed'), c=5:6)
join_recurse(list(a, b, c), by='day', join=full_join)

}
\seealso{
Other matrix/data-frame functions provided by utilbox: 
\code{\link{add_col}()},
\code{\link{identical_cols}()},
\code{\link{rep_df}()},
\code{\link{rev_rows}()},
\code{\link{split_rows}()}
}
\concept{matrix/data-frame functions provided by utilbox}
