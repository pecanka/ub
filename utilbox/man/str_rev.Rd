% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strings.R
\name{str_rev}
\alias{str_rev}
\title{Reverse the order of characters in a string}
\usage{
str_rev(x, simplify = !is.list(x))
}
\description{
\code{str_rev} takes character input (scalar, vector, list, etc) and
reverses the order of characters in each of its elements. Generally,
tries to preserve input class (i.e. lists stay lists).
}
\examples{
str_rev('world')
str_rev(list('hello', 'world'))

}
\seealso{
Other string-manipulation functions provided by utilbox: 
\code{\link{ascii}()},
\code{\link{collapse}()},
\code{\link{cumpaste0}()},
\code{\link{multi_sub}()},
\code{\link{padding}},
\code{\link{patternize}()},
\code{\link{str_cut}()},
\code{\link{str_diff}()},
\code{\link{str_grab}()},
\code{\link{str_insert}()},
\code{\link{str_is_empty}()},
\code{\link{str_paste_grid}()},
\code{\link{str_pos}()},
\code{\link{str_trim_space}()},
\code{\link{sub_at}()},
\code{\link{toupperfirst}()}
}
\concept{string-manipulation functions provided by utilbox}
