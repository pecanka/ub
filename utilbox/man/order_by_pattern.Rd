% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sorting.R
\name{order_by_pattern}
\alias{order_by_pattern}
\alias{order_by_pattern2}
\title{Ordering by multiple variables and regular pattern matching}
\usage{
order_by_pattern(..., pattern = ".", args_grepl = list(), args_order = list())

order_by_pattern2(x, ord, pattern, invert = FALSE, keep_order = FALSE, ...)
}
\description{
\code{order_by_pattern} returns the order when sorting by multiple variables supplied
via \code{...}. The sorting by the variables in \code{...} (all but the last) is done in a
standard way (i.e. equivalently to a call to \code{base::order}), while the sorting by
the last variable in \code{...} is done based on regualar pattern matching of \code{x} against
the pattern(s) supplied in \code{pattern}. Multiple patterns can be supplied to \code{pattern} and the
matching is done in a cascading way, meaning that the elements that match the first
element in \code{pattern} are returned first, then those matching the second element in \code{pattern},
and so on. Optionally, arguments to the internal call to \code{grepl} and \code{order} can be
supplied (as lists) via \code{args_grepl} and \code{args_order}, respectively.
}
\examples{
# define data
people = c('Jake','John','Mark','Rogen','Mary','David','Betty')
sex = c('m','m','m','m','f','m','f')
pattern = c('a','b','r','o')

# order by an all-matching pattern (i.e. no reordering)
people[order_by_pattern(people)]

# order by the patterns
people[order_by_pattern(people, pattern=pattern)]

# order first by sex and then by the patterns
people[order_by_pattern(sex, people, pattern=pattern)]

# order first by sex and then by the patterns (case-insensitive)
people[order_by_pattern(sex, people, pattern=pattern, args_grepl=list(ignore.case=TRUE))]

}
