% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operators.R
\name{operator_match}
\alias{operator_match}
\alias{\%match\%}
\alias{\%m\%}
\alias{\%m_ic\%}
\alias{\%notmatch\%}
\alias{\%nm\%}
\alias{\%nm_ic\%}
\alias{\%matches\%}
\alias{\%mes\%}
\alias{\%notmatches\%}
\alias{\%nmes\%}
\alias{\%m_any\%}
\alias{\%m_any_ic\%}
\alias{\%mes_any\%}
\alias{\%mes_any_ic\%}
\alias{\%nm_any\%}
\alias{\%nm_any_ic\%}
\alias{\%nmes_any\%}
\alias{\%nmes_any_ic\%}
\title{Regular expression match operator}
\usage{
pattern \%match\% x

pattern \%m\% x

pattern \%m_ic\% x

pattern \%notmatch\% x

pattern \%nm\% x

pattern \%nm_ic\% x

x \%matches\% pattern

x \%mes\% pattern

x \%notmatches\% pattern

x \%nmes\% pattern

pattern \%m_any\% x

pattern \%m_any_ic\% x

x \%mes_any\% pattern

x \%mes_any_ic\% pattern

pattern \%nm_any\% x

pattern \%nm_any_ic\% x

x \%nmes_any\% pattern

x \%nmes_any_ic\% pattern
}
\description{
\verb{\\\%match\\\%} (alias \verb{\\\%m\\\%}) is an operator version of
\code{base::grepl}. It uses the left-hand side argument as the \code{pattern}
and the right-hand side argument as the \code{text} arguments of a call to
\code{base::grepl}. The call to \code{base::grepl} is vectorized,
which means that the operator also takes vector arguments (on either
side).

\verb{\\\%m_ic\\\%} is a version of \verb{\\\%m\\\%} which ignores case by default.

\code{\%matches\%} does the same except with the roles of the two
arguments reversed.

\verb{\\\%notmatch\%} (alias \verb{\\\%nm\\\%}) and \verb{\\\%notmatches\%} (alias
\verb{\\\%nmes\\\%}) are the negations of the two operators.

\verb{\\\%nm_ic\\\%} is the case-insensitive version of \verb{\\\%notmatch\%} and
\verb{\\\%nm\\\%}.

\verb{\\\%m_any\\\%} is an \"any pattern\" matching operator. For its RHS,
it checks whether its elements match any of the patterns on the
LHS, and returns logical indicators of this match. If an element
on the RHS does not match any of the patters specified on the LHS,
its corresponding returns value is \code{FALSE}, otherwise it is \code{TRUE}.

\verb{\\\%m_any_ic\%} is a case-insensitive version of \verb{\\\%m_any\%}.
}
\examples{
# in one direction:
"ay" \%m\% "daylight"
"ai" \%m\% "daylight"
"ay" \%nm\% "daylight"
"ai" \%nm\% "daylight"

# and in the opposite direction:
"daylight" \%matches\% "ay"
"daylight" \%matches\% "ai"

# case insensitive version:
"DAYlight" \%m_ic\% "ay"
"DAYlight" \%m_ic\% "ai"

}
\seealso{
Other operators provided by utilbox: 
\code{\link{\%anyin\%}()},
\code{\link{\%modify\%}()},
\code{\link{concatenate}},
\code{\link{not_in}},
\code{\link{operator_NULL}},
\code{\link{operator_append}},
\code{\link{operator_c}},
\code{\link{renaming_operators}}
}
\concept{operators provided by utilbox}
