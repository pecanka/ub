% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scripting.R
\name{sourcing}
\alias{sourcing}
\alias{is_sourced}
\alias{source_depth}
\alias{source_files}
\alias{source_pattern}
\title{Sourcing check}
\usage{
is_sourced(level = 1, exact_level = TRUE)

source_depth()

source_files(
  files,
  path = ".",
  announce = TRUE,
  normalize = FALSE,
  envir = .GlobalEnv,
  report_new = TRUE
)

source_pattern(
  pattern,
  path = ".",
  announce = TRUE,
  normalize = FALSE,
  envir = .GlobalEnv,
  report_new = TRUE
)
}
\description{
\code{is_sourced()} checks whether the script from which it is called
is being sourced (via either \code{source()} or \code{sys.source()}) "at" (when
\code{exact_level=TRUE}) or "above" (when \code{exact_level=FALSE})
level \code{level}. In other words, when this function is called from a
script that is being sourced from the global environment then
\code{is_sourced(1)} returns \code{TRUE}, when it is called from a script that
is being sourced by another script from the global environment then
\code{is_sourced(2)} returns \code{TRUE}, etc. Returns a logical indicator of
whether the sourcing level is equal or above \code{level}.

\code{source_depth()} determined the depth of sourcing. In other words,
for nested calls to source script this functions determines how many
times the \code{source} function has currently been called at the point of
invokation of \code{source_depth()}.

\code{source_files()} sources all specified files (\code{files}) relative to
the given path (\code{path}).

\code{source_pattern()} sources all files that match the supplied
pattern (\code{pattern}) relative to the supplied path (\code{path}) or the
current working directory.
}
