% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filesystem.R
\name{dir_work}
\alias{dir_work}
\alias{is_absolute_path}
\alias{dir_create}
\alias{dir_remove}
\alias{dir_slash_check}
\title{Work with files and paths}
\usage{
is_absolute_path(path)

dir_create(dir, ask = interactive(), verbose = FALSE)

dir_remove(dir)

dir_slash_check(dir, fsep = .Platform$file.sep)
}
\description{
`is_absolute_path` checks whether the supplied path (`path`), which
may or may not include a file name, is absolute or not. On Windows,
absolute means that it begins with '<drive letter>:/', on Linux/Unix
it checks for '/' at the beginning of the path.

`dir_create` is a verbose version of \code{base::dir.create}.
}
\details{
`file_path` binds the supplied path (`path`) with the supplied file 
name (`file`). If `file` contains absolute path or if path is an
an empty string, it ignores path. Otherwise, it concatenates them 
using `fsep` as separator.

`dir_remove` removes (unlinks) supplied directory/ies.

`dir_slash_check` checks whether the argument (`dir`) ends with 
a forward/backward slash and if not it appends one.
}
\examples{
file_path('home','text.txt')

}
\seealso{
Other file system functions provided by utilbox: 
\code{\link{dir_exist_check}()},
\code{\link{file_exists}()},
\code{\link{file_work}},
\code{\link{list_files}()}

Other file system functions provided by utilbox: 
\code{\link{dir_exist_check}()},
\code{\link{file_exists}()},
\code{\link{file_work}},
\code{\link{list_files}()}
}
\concept{file system functions provided by utilbox}
