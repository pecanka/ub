% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrap_script.R
\name{script_help_fix}
\alias{script_help_fix}
\alias{script_help_unwrap}
\alias{script_help_clean_and_wrap}
\title{Wrap R code explanations}
\usage{
script_help_fix(
  file,
  code,
  max_width = 70,
  eol = "\\n#' ",
  punctuation = ".!?",
  split_code = TRUE,
  split = "\\\\n",
  verbose = TRUE
)

script_help_unwrap(
  code,
  help_string = "#'",
  pattern_help_line = "^#'",
  pattern_specials = "#'[ ]*[@](example|family|export|rdname)",
  pattern_rdname = "@name|@rdname"
)

script_help_clean_and_wrap(
  Help,
  RDs,
  max_width = 70,
  eol = "\\n#' ",
  punctuation = ".!?",
  trim_trailing_space = TRUE,
  replace_tag_code = TRUE,
  scrub_multiple_spaces = TRUE
)
}
\description{
Takes an R script and \"wraps\" (i.e. add line breaks to limits
width) the help explanations of what the functions do so that the
lines do not exceed \code{max_width} too much. It places a new line right
after the end of each word whose presence made the line length on
which it is exceed \code{max_width}.
}
\examples{

# Example with code supplied directly:
snippet1 = "#' Simple printing function\n#'\n#' " 
snippet2 = paste0(rep('Printing function.', t=30), collapse=' ')
snippet3 = "\n#'\n#' @example\n#' f('Hello world!')\n#'\n#' @export\n"
snippet4 = "f = function(x) {\n  print(x)\n}"
script_help_fix(code=snippet1 \%.\% snippet2 \%.\% snippet3 \%.\% snippet4)

}
