% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matching.R
\name{patternize}
\alias{patternize}
\alias{unpatternize}
\title{Patternize a string}
\usage{
patternize(name, special = c("+", ".", "(", ")", "$", "?", "\\\\"))

unpatternize(pattern)
}
\description{
\code{patternize} wraps special characters in string name (possibly a vector) by 
brackets so that it can be matched within regular expression matching (the case of 
"\\" has to be treated differently). Useful for instance when working with file names.
}
\details{
\code{unpatternize} does the reverse of \code{patternize()}.
}
\examples{
regexpr('notes.txt', 'notes_txt')>0                # TRUE
regexpr(patternize('notes.txt'), 'notes_txt')>0    # FALSE
regexpr(patternize('notes.txt'), 'notes.txt')>0    # TRUE

}
\seealso{
Other string-manipulation functions provided by utilbox: 
\code{\link{ascii}()},
\code{\link{collapse}()},
\code{\link{combine_names}()},
\code{\link{cumpaste0}()},
\code{\link{padding}},
\code{\link{str_add_punct}()},
\code{\link{str_diff}()},
\code{\link{str_insert}()},
\code{\link{str_is_empty}()},
\code{\link{str_last}()},
\code{\link{str_replace}()},
\code{\link{str_scrub_space}()},
\code{\link{str_split}()},
\code{\link{str_trim_space}()},
\code{\link{strpos}()},
\code{\link{strrev}()},
\code{\link{sub_at}()},
\code{\link{subm}()},
\code{\link{toupperfirst}()}

Other string-manipulation functions provided by utilbox: 
\code{\link{ascii}()},
\code{\link{collapse}()},
\code{\link{combine_names}()},
\code{\link{cumpaste0}()},
\code{\link{padding}},
\code{\link{str_add_punct}()},
\code{\link{str_diff}()},
\code{\link{str_insert}()},
\code{\link{str_is_empty}()},
\code{\link{str_last}()},
\code{\link{str_replace}()},
\code{\link{str_scrub_space}()},
\code{\link{str_split}()},
\code{\link{str_trim_space}()},
\code{\link{strpos}()},
\code{\link{strrev}()},
\code{\link{sub_at}()},
\code{\link{subm}()},
\code{\link{toupperfirst}()}
}
\concept{string-manipulation functions provided by utilbox}
