% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debug.R
\name{function_kidnap}
\alias{function_kidnap}
\alias{function_restore}
\alias{stop_function_kidnap}
\alias{stop_function_restore}
\alias{warning_function_kidnap}
\alias{warning_function_restore}
\title{Kidnap the warning function in base}
\usage{
function_kidnap(fun_name, where = parent.frame(), msg_argument, restore_call)

function_restore(fun_name, where = parent.frame())

stop_function_kidnap()

stop_function_restore()

warning_function_kidnap()

warning_function_restore()
}
\description{
\code{function_kidnap()} modifies the code of the supplied function.
Kidnapping in this context means that the function will ask the
user for input before proceeding with its code. The original code
of the kidnapped function is backed up in the attribute 'original_function'
of the kidnapped function.
}
\details{
\code{function_restore()} restores the original code of a kidnapped function.

\code{stop_function_kidnap()} is a shortcut for kidnapping the function
\code{base::stop}, while \code{stop_function_restore()} restores it.

\code{warning_function_kidnap()} and \code{warning_function_restore()} perform
the same action for the warning functions \code{base::warning} and
\code{base::.signalSimpleWarning}.
}
