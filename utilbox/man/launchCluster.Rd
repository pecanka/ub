% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel.R
\name{launchCluster}
\alias{launchCluster}
\alias{endCluster}
\title{Start a parallel computation cluster}
\usage{
launchCluster(
  n_cores = parallel::detectCores() - 1,
  max_n_cores = parallel::detectCores() - 1,
  progress_bar = TRUE,
  pb_max,
  pb_print_every_n = 1,
  pb_width = min(options()$width, 100),
  pb_initial = 0,
  pb_show = TRUE,
  pb_hint = TRUE,
  announce = TRUE,
  con = stdout()
)

endCluster()
}
\description{
\code{launchCluster()} starts a parallel cluster. It also creates several objects
in the parent functions calling frame, namely \code{.cl.} (the actual cluster),
\code{.stop.cluster.} (a function for stopping of the cluster), \code{.pb.} (progress bar)
and \code{.stop.pb.} (a function for stopping the progress bar). A call to \code{launchCluster()}
also executes \code{on.exit()} in the the parent functions calling frame,
which registers the cluster stopping function (i.e., \code{.stop.cluster.()}) to be
called when the parent function exits.
}
\details{
\code{endCluster()} stops the parallel cluster and finishes the progress bar.
}
\examples{
n = 100
opts_snow = launchCluster(pb_max=100)
 
v = foreach(i=1:n, .combine=rbind, .options.snow = opts_snow) \%dopar\% {
  mean(1:1000000)
}

.stop.pb.()
.stop.cluster.()

}
