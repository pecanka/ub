% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sequences.R
\name{sequences}
\alias{sequences}
\alias{shift}
\alias{nunique}
\alias{frac}
\alias{midpoints}
\alias{range_sym}
\title{Points in a sequence}
\usage{
shift(x, lag = 1, rotate = TRUE, value_rotated = NA)

nunique(x)

frac(x)

midpoints(x)

range_sym(..., around = 0)
}
\description{
\code{shift()} shifts the elements in a vector in \code{x} by \code{lag} spaces.
With \code{rotate=TRUE} (default), the elements are rotated, meaning
those at the end move to the beginning (for \code{lag>0}) or those at
the beginning move to the end (for \code{lag<0}). With \code{rotate=FALSE}
the rotated elements are replaced with \code{value_rotated} (\code{NA} by default).

\code{frac()} gives sequential fractions. It is similar to \code{base::diff()}
except that it returns lagged ratios instead of lagged differences.

\code{midpoints()} finds the midpoints between individual elements of a
sequence given in \code{x}.

\code{range_sym()} returns a symmetric range around the given point determined
via \code{around}. Useful for instance for determining axis range for producing
plots that are symmetric around a given value.

\code{nunique()} counts the number of unique values in the supplied
argument. Simply an alias for \code{length(unique(x))}.
}
\examples{
frac(1:10)

midpoints(1:10)
midpoints(c(1:5,3*1:5))

range_sym((-3):5)
range_sym((-3):5, around=1)
range_sym((-3):5, around=4)

}
\seealso{
Other numeric functions provided by utilbox: 
\code{\link{Invert}()},
\code{\link{downweight}()},
\code{\link{extract_by_value}},
\code{\link{locate_position_of_value}},
\code{\link{lower_tri}()},
\code{\link{min_dif}()},
\code{\link{permutations}},
\code{\link{replace_value}},
\code{\link{sets}},
\code{\link{to_base_k}()},
\code{\link{which_max}()}
}
\concept{numeric functions provided by utilbox}
