% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strings.R
\name{str_pos}
\alias{str_pos}
\alias{str_first_occurence}
\alias{str_last_occurence}
\title{Find the first or last occurrence of a substring}
\usage{
str_pos(
  string,
  what,
  first = TRUE,
  last = FALSE,
  patternize = FALSE,
  escape = FALSE,
  fixed = TRUE
)

str_first_occurence(x, what, miss = -1)

str_last_occurence(x, what, miss = -1, escape = TRUE)
}
\description{
\code{str_pos} finds the first (when \code{first=TRUE}) and/or the last
(\code{last=TRUE}) occurrence of a substring (given as regular pattern) in
a string.

\code{str_first_occurence} returns the position of the first occurrence
of \code{what} inside \code{x}, or the value in \code{miss} (-1 by default) if none
find. It is functionally similar to \code{str_pos(..., first=TRUE)} except
that it escapes (via \code{\link{str_escape}}) the substring in \code{what} first,
allows a custom missingness indicator (\code{miss}) and is slightly faster.

\code{str_last_occurence} is analogous to \code{str_first_occurence} except
that it returns the position of the last occurrence of \code{what}
}
\examples{
str_pos('hello world.', 'o', first=TRUE)
str_pos('hello world.', 'o', last=TRUE)
str_pos('hello world.', '[el]', first=TRUE)
str_pos('hello world.', '[el]', last=TRUE)
str_pos('hello world.', '.')
str_pos('hello world.', '.', patternize=TRUE)

str_first_occurence('hello world!', 'e')

}
\seealso{
Other string-manipulation functions provided by utilbox: 
\code{\link{ascii}()},
\code{\link{collapse}()},
\code{\link{cumpaste0}()},
\code{\link{multi_sub}()},
\code{\link{padding}},
\code{\link{patternize}()},
\code{\link{str_diff}()},
\code{\link{str_grab}()},
\code{\link{str_insert}()},
\code{\link{str_is_empty}()},
\code{\link{str_paste_grid}()},
\code{\link{str_rev}()},
\code{\link{str_split}()},
\code{\link{str_trim_space}()},
\code{\link{sub_at}()},
\code{\link{toupperfirst}()}
}
\concept{string-manipulation functions provided by utilbox}
