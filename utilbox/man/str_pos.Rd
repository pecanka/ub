% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strings.R
\name{str_pos}
\alias{str_pos}
\alias{str_first_occurence}
\alias{str_last_occurence}
\title{Find the first or last occurrence of a substring}
\usage{
str_pos(
  string,
  what,
  first = TRUE,
  last = FALSE,
  patternize = FALSE,
  escape = FALSE,
  fixed = TRUE
)

str_first_occurence(x, what, miss = -1)

str_last_occurence(x, what, miss = -1)
}
\description{
`str_pos` finds the first (when `first=TRUE`) and/or the last 
(`last=TRUE`) occurrence of a substring (given as regular pattern) 
in a string.
`str_first_occurence` returns the position of the first
occurrence of `what` inside `x`, or the value in `miss`
(-1 by default) if none find. It is functionally similar 
to `str_pos(..., first=TRUE)` except that it escapes (via 
[str_escape]) the substring in `what` first, allows a custom
missingness indicator (`miss`) and is slightly faster.
}
\details{
`str_last_occurence` is analogous to `str_first_occurence`
except that it returns the position of the last occurrence
of `what`
}
\examples{
str_pos('hello world.', 'o', first=TRUE)
str_pos('hello world.', 'o', last=TRUE)
str_pos('hello world.', '[el]', first=TRUE)
str_pos('hello world.', '[el]', last=TRUE)
str_pos('hello world.', '.')
str_pos('hello world.', '.', patternize=TRUE)

str_first_occurence('hello world!', 'e')

}
\seealso{
Other string-manipulation functions provided by utilbox: 
\code{\link{ascii}()},
\code{\link{collapse}()},
\code{\link{cumpaste0}()},
\code{\link{padding}},
\code{\link{patternize}()},
\code{\link{str_add_punct}()},
\code{\link{str_diff}()},
\code{\link{str_insert}()},
\code{\link{str_is_empty}()},
\code{\link{str_last}()},
\code{\link{str_paste_grid}()},
\code{\link{str_replace}()},
\code{\link{str_scrub_space}()},
\code{\link{str_split}()},
\code{\link{str_trim_space}()},
\code{\link{strrev}()},
\code{\link{sub_at}()},
\code{\link{subm}()},
\code{\link{toupperfirst}()}
}
\concept{string-manipulation functions provided by utilbox}
